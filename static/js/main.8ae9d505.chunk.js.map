{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","newName","setNewName","isEditing","setEditing","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","EveryThing","state","InputTaskEditing","newTask","Id","Name","Editing","Vision","data","PropsData","this","ViewTemplateTotal","i","ViewTemplate","j","length","console","log","ToggleTask","k","setState","ActivateEditing","x","splice","DeleteTask","push","EditingTemplate","m","CancelEditing","n","SaveEditing","a","b","c","React","Component","window","addEventListener","ReactDOM","render","document","getElementById","App","tasks","setTasks","filter","updatedTasks","map","remainingTasks","editedTaskList","taskList","filterList","tasksNoun","headingText","nanoid","role","aria-labelledby","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB"],"mappings":"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","file":"static/js/main.8ae9d505.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Form(props) {\r\n  const [name, setName] = useState('');\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.addTask(name);\r\n    setName('');\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className='label-wrapper'>\r\n        <label htmlFor='new-todo-input' className='label__lg'>\r\n          What needs to be done?\r\n        </label>\r\n      </h2>\r\n      <input\r\n        type='text'\r\n        id='new-todo-input'\r\n        className='input input__lg'\r\n        name='text'\r\n        autoComplete='off'\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button type='submit' className='btn btn__primary btn__lg'>\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nfunction FilterButton(props) {\r\n  return (\r\n    <button\r\n      type='button'\r\n      className='btn toggle-btn'\r\n      aria-pressed={props.isPressed}\r\n      onClick={() => props.setFilter(props.name)}\r\n    >\r\n      <span className='visually-hidden'>Show </span>\r\n      <span>{props.name}</span>\r\n      <span className='visually-hidden'> tasks</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilterButton;\r\n","import React, { useRef, useState } from 'react';\r\n\r\nexport default function Todo(props) {\r\n  const [newName, setNewName] = useState('');\r\n  const [isEditing, setEditing] = useState(false);\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName('');\r\n    setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <form className='stack-small' onSubmit={handleSubmit}>\r\n      <div className='form-group'>\r\n        <label className='todo-label' htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input\r\n          id={props.id}\r\n          className='todo-text'\r\n          type='text'\r\n          value={newName}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className='btn-group'>\r\n        <button\r\n          type='button'\r\n          className='btn todo-cancel'\r\n          onClick={() => setEditing(false)}\r\n        >\r\n          Cancel\r\n          <span className='visually-hidden'>renaming {props.name}</span>\r\n        </button>\r\n        <button type='submit' className='btn btn__primary todo-edit'>\r\n          Save\r\n          <span className='visually-hidden'>new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  const viewTemplate = (\r\n    <div className='stack-small'>\r\n      <div className='c-cb'>\r\n        <input\r\n          id={props.id}\r\n          type='checkbox'\r\n          defaultChecked={props.completed}\r\n          onChange={() => props.toggleTaskCompleted(props.id)}\r\n        />\r\n        <label className='todo-label' htmlFor={props.id}>\r\n          {props.name}\r\n        </label>\r\n      </div>\r\n      <div className='btn-group'>\r\n        <button type='button' className='btn' onClick={() => setEditing(true)}>\r\n          Edit <span className='visually-hidden'>{props.name}</span>\r\n        </button>\r\n        <button\r\n          type='button'\r\n          className='btn btn__danger'\r\n          onClick={() => props.deleteTask(props.id)}\r\n        >\r\n          Delete <span className='visually-hidden'>{props.name}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return <li className='todo'>{isEditing ? editingTemplate : viewTemplate}</li>;\r\n}\r\n","import React, { useState } from 'react';\r\n// import logo from './logo.svg';\r\n// import styles from './App.module.scss';\r\nimport Form from './components/Form';\r\nimport FilterButton from './components/FilterButton';\r\nimport Todo from './components/Todo';\r\nimport { nanoid } from 'nanoid';\r\nimport ReactDOM from 'react-dom';\r\n// import { createStore } from 'redux';\r\n\r\nconst FILTER_MAP = {\r\n  All: () => true,\r\n  Active: (task) => !task.completed,\r\n  Completed: (task) => task.completed,\r\n};\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\nfunction App(props) {\r\n  const [tasks, setTasks] = useState(props.tasks);\r\n  const [filter, setFilter] = useState('All');\r\n\r\n  function toggleTaskCompleted(id) {\r\n    const updatedTasks = tasks.map((task) => {\r\n      // if this task has the same ID as the edited task\r\n      if (id === task.id) {\r\n        // use object spread to make a new object\r\n        // whose `completed` prop has been inverted\r\n        return { ...task, completed: !task.completed };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n  }\r\n\r\n  function deleteTask(id) {\r\n    const remainingTasks = tasks.filter((task) => id !== task.id);\r\n    setTasks(remainingTasks);\r\n  }\r\n\r\n  function editTask(id, newName) {\r\n    const editedTaskList = tasks.map((task) => {\r\n      // if this task has the same ID as the edited task\r\n      if (id === task.id) {\r\n        //\r\n        return { ...task, name: newName };\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(editedTaskList);\r\n  }\r\n\r\n  const taskList = tasks\r\n    .filter(FILTER_MAP[filter])\r\n    .map((task) => (\r\n      <Todo\r\n        id={task.id}\r\n        name={task.name}\r\n        completed={task.completed}\r\n        key={task.id}\r\n        toggleTaskCompleted={toggleTaskCompleted}\r\n        deleteTask={deleteTask}\r\n        editTask={editTask}\r\n      />\r\n    ));\r\n\r\n  const filterList = FILTER_NAMES.map((name) => (\r\n    <FilterButton\r\n      key={name}\r\n      name={name}\r\n      isPressed={name === filter}\r\n      setFilter={setFilter}\r\n    />\r\n  ));\r\n\r\n  function addTask(name) {\r\n    const newTask = { id: 'todo-' + nanoid(), name: name, completed: false };\r\n    setTasks([...tasks, newTask]);\r\n  }\r\n\r\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\r\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\r\n\r\n  return (\r\n    <div className='todoapp stack-large'>\r\n      <Form addTask={addTask} />\r\n      <div className='filters btn-group stack-exception'>{filterList}</div>\r\n      <h2 id='list-heading'>{headingText}</h2>\r\n      <div\r\n        role='list'\r\n        className='todo-list stack-large stack-exception'\r\n        aria-labelledby='list-heading'\r\n      >\r\n        {taskList}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*======================================================\r\n====================Class second try====================\r\n======================================================*/\r\nclass EveryThing extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      InputTaskEditing: '',\r\n      newTask: {\r\n        Id: '',\r\n        Name: '',\r\n        Completed: false,\r\n        Editing: false,\r\n        Vision: true,\r\n      },\r\n      data: [\r\n        {\r\n          Id: 'Homework',\r\n          Name: 'Homework',\r\n          Completed: false,\r\n          Editing: false,\r\n          Vision: true,\r\n        },\r\n        {\r\n          Id: 'Nap',\r\n          Name: 'Nap',\r\n          Completed: false,\r\n          Editing: false,\r\n          Vision: true,\r\n        },\r\n        {\r\n          Id: 'Exercise',\r\n          Name: 'Exercise',\r\n          Completed: true,\r\n          Editing: false,\r\n          Vision: true,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  // let PropsData = this.state.data;\r\n\r\n  render() {\r\n    let PropsData = this.state.data;\r\n    let ViewTemplateTotal = [];\r\n\r\n    //Input New Task\r\n    let InputNewTask = (e) => {\r\n      this.state.newTask.Id = e.target.value;\r\n      this.state.newTask.Name = e.target.value;\r\n    };\r\n\r\n    //Click Add New Task\r\n    let AddNewTask = () => {\r\n      PropsData.push(this.state.newTask);\r\n      this.setState({ data: PropsData });\r\n    };\r\n\r\n    //Category--All\r\n    let showAll = () => {\r\n      for (let a = 0; a < PropsData.length; a += 1) {\r\n        PropsData[a].Vision = true;\r\n      }\r\n      this.setState({ data: PropsData });\r\n    };\r\n\r\n    //Category--Active\r\n    let showActive = () => {\r\n      for (let b = 0; b < PropsData.length; b += 1) {\r\n        if (PropsData[b].Completed === false) {\r\n          PropsData[b].Vision = true;\r\n        } else if (PropsData[b].Completed === true) {\r\n          PropsData[b].Vision = false;\r\n        }\r\n      }\r\n      this.setState({ data: PropsData });\r\n    };\r\n\r\n    //Category--Completed\r\n    let showCompleted = () => {\r\n      for (let c = 0; c < PropsData.length; c += 1) {\r\n        if (PropsData[c].Completed === true) {\r\n          PropsData[c].Vision = true;\r\n        } else if (PropsData[c].Completed === false) {\r\n          PropsData[c].Vision = false;\r\n        }\r\n      }\r\n      this.setState({ data: PropsData });\r\n    };\r\n\r\n    //check & uncheck\r\n    let ToggleTask = function (id) {\r\n      for (let j = 0; j < PropsData.length; j += 1) {\r\n        if (id === PropsData[j].Id && PropsData[j].Completed === false) {\r\n          PropsData[j].Completed = true;\r\n        } else if (id === PropsData[j].Id && PropsData[j].Completed === true) {\r\n          PropsData[j].Completed = false;\r\n        }\r\n      }\r\n      console.log(PropsData);\r\n    };\r\n\r\n    //Edit\r\n    let ActivateEditing = (id) => {\r\n      for (let k = 0; k < PropsData.length; k += 1) {\r\n        if (id === PropsData[k].Id && PropsData[k].Editing === false) {\r\n          PropsData[k].Editing = true;\r\n        } else if (id === PropsData[k].Id && PropsData[k].Editing === true) {\r\n          PropsData[k].Editing = false;\r\n        }\r\n      }\r\n      console.log(PropsData);\r\n      this.setState({ data: PropsData });\r\n    };\r\n\r\n    //Input Task Editing\r\n    let InputTaskEditing = (e) => {\r\n      this.state.InputTaskEditing = e.target.value;\r\n    };\r\n\r\n    //Cancel Editing\r\n    let CancelEditing = (id) => {\r\n      for (let m = 0; m < PropsData.length; m += 1) {\r\n        this.state.InputTaskEditing = '';\r\n        if (id === PropsData[m].Id) {\r\n          PropsData[m].Editing = false;\r\n        }\r\n      }\r\n      this.setState({ data: PropsData });\r\n    };\r\n\r\n    //Save Editing\r\n    let SaveEditing = (id) => {\r\n      for (let n = 0; n < PropsData.length; n += 1) {\r\n        if (id === PropsData[n].Id) {\r\n          PropsData[n].Name = this.state.InputTaskEditing;\r\n          PropsData[n].Id = this.state.InputTaskEditing;\r\n        }\r\n      }\r\n      this.state.InputTaskEditing = '';\r\n      this.setState({ data: PropsData });\r\n    };\r\n\r\n    //Delete\r\n    let DeleteTask = (id) => {\r\n      for (let x = 0; x < PropsData.length; x += 1) {\r\n        if (id === PropsData[x].Id) {\r\n          PropsData.splice(x, 1);\r\n        }\r\n      }\r\n      console.log(PropsData);\r\n      this.setState({ data: PropsData });\r\n    };\r\n\r\n    //UI rendering\r\n    for (let i = 0; i < PropsData.length; i += 1) {\r\n      if (PropsData[i].Editing === false && PropsData[i].Vision === true) {\r\n        // console.log(PropsData[i]);\r\n        //Viewing mode\r\n        const ViewTemplate = (\r\n          <li className='todo' key={i}>\r\n            <div className='StackSmall'>\r\n              <div className='C-Cb'>\r\n                <input\r\n                  id={PropsData[i].Id}\r\n                  type='checkbox'\r\n                  defaultChecked={PropsData[i].Completed}\r\n                  onChange={function () {\r\n                    ToggleTask(PropsData[i].Id);\r\n                  }}\r\n                />\r\n                <label className='TodoLabel' htmlFor={PropsData[i].Id}>\r\n                  {PropsData[i].Name}\r\n                </label>\r\n              </div>\r\n              <div className='BtnGroup'>\r\n                <button\r\n                  type='button'\r\n                  className='Btn'\r\n                  onClick={() => ActivateEditing(PropsData[i].Id)}\r\n                >\r\n                  Edit{' '}\r\n                  <span className='VisuallyHidden'>{PropsData[i].Name}</span>\r\n                </button>\r\n                <button\r\n                  type='button'\r\n                  className='Btn Btn__Danger'\r\n                  onClick={() => DeleteTask(PropsData[i].Id)}\r\n                >\r\n                  Delete{' '}\r\n                  <span className='VisuallyHidden'>{PropsData[i].Name}</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        );\r\n\r\n        ViewTemplateTotal.push(ViewTemplate);\r\n      } else if (\r\n        PropsData[i].Editing === true &&\r\n        PropsData[i].Vision === true\r\n      ) {\r\n        console.log(PropsData[i]);\r\n        //Editing mode\r\n        const EditingTemplate = (\r\n          <form\r\n            className='StackSmall'\r\n            // onSubmit={HandleSubmit}\r\n          >\r\n            <div className='FormGroup'>\r\n              <label className='TodoLabel' htmlFor={PropsData[i].Id}>\r\n                New name for {PropsData[i].Name}\r\n              </label>\r\n              <input\r\n                id={PropsData[i].Id}\r\n                className='TodoText'\r\n                type='text'\r\n                // value={NewName}\r\n                onChange={InputTaskEditing}\r\n              />\r\n            </div>\r\n            <div className='BtnGroup'>\r\n              <button\r\n                type='button'\r\n                className='Btn TodoCancel'\r\n                onClick={() => CancelEditing(PropsData[i].Id)}\r\n              >\r\n                Cancel renaming {PropsData[i].Name}\r\n                {/* <span className='VisuallyHidden'>\r\n                  renaming {PropsData[i].Name}\r\n                </span> */}\r\n              </button>\r\n              <button\r\n                type='submit'\r\n                className='Btn Btn__Primary TodoEdit'\r\n                onClick={() => SaveEditing(PropsData[i].Id)}\r\n              >\r\n                Save new name for {PropsData[i].Name}\r\n                {/* <span className='VisuallyHidden'>\r\n                  new name for {PropsData[i].Name}\r\n                </span> */}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        );\r\n\r\n        ViewTemplateTotal.push(EditingTemplate);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <form>\r\n          <h2>What needs to be done?</h2>\r\n          <input type='text' onChange={InputNewTask}></input>\r\n          <button type='submit' onClick={AddNewTask}>\r\n            Add\r\n          </button>\r\n        </form>\r\n        <div>\r\n          <button onClick={showAll}>Show All tasks</button>\r\n          <button onClick={showActive}>Show Active tasks</button>\r\n          <button onClick={showCompleted}>Show Completed tasks</button>\r\n        </div>\r\n        <h2>{PropsData.length} tasks remaining</h2>\r\n        <ul>\r\n          {ViewTemplateTotal}\r\n          {/* {this.state.IsEditing ? EditingTemplate : ViewTemplate} */}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nwindow.addEventListener('load', () => {\r\n  ReactDOM.render(\r\n    <EveryThing />,\r\n    // <EveryThing data={PreSetTasks} number={56} />,\r\n    document.getElementById('root2')\r\n  );\r\n});\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst DATA = [\r\n  { id: 'todo-0', name: 'Eat', completed: true },\r\n  { id: 'todo-1', name: 'Sleep', completed: true },\r\n  { id: 'todo-2', name: 'Repeat', completed: false },\r\n];\r\n\r\nReactDOM.render(<App tasks={DATA} />, document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}