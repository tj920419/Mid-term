{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","Todo","defaultChecked","completed","App","tasks","setTasks","taskList","map","task","newTask","nanoid","role","aria-labelledby","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"sNAsCeA,MApCf,SAAcC,GAAQ,IAAD,EACKC,mBAAS,IADd,mBACZC,EADY,KACNC,EADM,KAanB,OACE,uBAAMC,SAPR,SAAsBC,GACpBA,EAAEC,iBACFN,EAAMO,QAAQL,GACdC,EAAQ,KAIR,UACE,oBAAIK,UAAU,gBAAd,SACE,uBAAOC,QAAQ,iBAAiBD,UAAU,YAA1C,sCAIF,uBACEE,KAAK,OACLC,GAAG,iBACHH,UAAU,kBACVN,KAAK,OACLU,aAAa,MACbC,MAAOX,EACPY,SAxBN,SAAsBT,GACpBF,EAAQE,EAAEU,OAAOF,UAyBf,wBAAQH,KAAK,SAASF,UAAU,2BAAhC,qBCnBSQ,MAVf,SAAsBhB,GACpB,OACE,yBAAQU,KAAK,SAASF,UAAU,iBAAiBS,eAAa,OAA9D,UACE,sBAAMT,UAAU,kBAAhB,mBACA,wCACA,sBAAMA,UAAU,kBAAhB,wBCLS,SAASU,EAAKlB,GAC3B,OACE,qBAAIQ,UAAU,mBAAd,UACE,sBAAKA,UAAU,OAAf,UACE,uBAAOG,GAAIX,EAAMW,GAAID,KAAK,WAAWS,eAAgBnB,EAAMoB,YAC3D,uBAAOZ,UAAU,aAAaC,QAAST,EAAMW,GAA7C,SACGX,EAAME,UAGX,sBAAKM,UAAU,YAAf,UACE,yBAAQE,KAAK,SAASF,UAAU,MAAhC,kBACO,sBAAMA,UAAU,kBAAhB,SAAmCR,EAAME,UAEhD,yBAAQQ,KAAK,SAASF,UAAU,kBAAhC,oBACS,sBAAMA,UAAU,kBAAhB,SAAmCR,EAAME,gB,WC4B3CmB,MApCf,SAAarB,GAAQ,IAAD,EACQC,mBAASD,EAAMsB,OADvB,mBACXA,EADW,KACJC,EADI,KAEZC,EAAWF,EAAMG,KAAI,SAACC,GAAD,OACzB,cAACR,EAAD,CACEP,GAAIe,EAAKf,GACTT,KAAMwB,EAAKxB,KACXkB,UAAWM,EAAKN,WACXM,EAAKf,OASd,OACE,sBAAKH,UAAU,sBAAf,UACE,cAAC,EAAD,CAAMD,QAPV,SAAiBL,GACf,IAAMyB,EAAU,CAAEhB,GAAI,QAAUiB,cAAU1B,KAAMA,EAAMkB,WAAW,GACjEG,EAAS,GAAD,mBAAKD,GAAL,CAAYK,QAMlB,sBAAKnB,UAAU,oCAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,oBAAIG,GAAG,eAAP,+BACA,oBACEkB,KAAK,OACLrB,UAAU,wCACVsB,kBAAgB,eAHlB,SAKGN,QC1BMO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKdQ,IAASC,OAAO,cAAC,EAAD,CAAKnB,MANR,CACX,CAAEX,GAAI,SAAUT,KAAM,MAAOkB,WAAW,GACxC,CAAET,GAAI,SAAUT,KAAM,QAASkB,WAAW,GAC1C,CAAET,GAAI,SAAUT,KAAM,SAAUkB,WAAW,MAGPsB,SAASC,eAAe,SAK9DZ,M","file":"static/js/main.c6128bd3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Form(props) {\r\n  const [name, setName] = useState('');\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.addTask(name);\r\n    setName('');\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className='label-wrapper'>\r\n        <label htmlFor='new-todo-input' className='label__lg'>\r\n          What needs to be done?\r\n        </label>\r\n      </h2>\r\n      <input\r\n        type='text'\r\n        id='new-todo-input'\r\n        className='input input__lg'\r\n        name='text'\r\n        autoComplete='off'\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button type='submit' className='btn btn__primary btn__lg'>\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\n\r\nfunction FilterButton(props) {\r\n  return (\r\n    <button type='button' className='btn toggle-btn' aria-pressed='true'>\r\n      <span className='visually-hidden'>Show </span>\r\n      <span>all </span>\r\n      <span className='visually-hidden'> tasks</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilterButton;\r\n","import React from 'react';\r\n\r\nexport default function Todo(props) {\r\n  return (\r\n    <li className='todo stack-small'>\r\n      <div className='c-cb'>\r\n        <input id={props.id} type='checkbox' defaultChecked={props.completed} />\r\n        <label className='todo-label' htmlFor={props.id}>\r\n          {props.name}\r\n        </label>\r\n      </div>\r\n      <div className='btn-group'>\r\n        <button type='button' className='btn'>\r\n          Edit <span className='visually-hidden'>{props.name}</span>\r\n        </button>\r\n        <button type='button' className='btn btn__danger'>\r\n          Delete <span className='visually-hidden'>{props.name}</span>\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\n// import logo from './logo.svg';\nimport styles from './App.module.scss';\nimport Form from './components/Form';\nimport FilterButton from './components/FilterButton';\nimport Todo from './components/Todo';\nimport { nanoid } from 'nanoid';\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const taskList = tasks.map((task) => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: 'todo-' + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  return (\n    <div className='todoapp stack-large'>\n      <Form addTask={addTask} />\n      <div className='filters btn-group stack-exception'>\n        <FilterButton />\n        <FilterButton />\n        <FilterButton />\n      </div>\n      <h2 id='list-heading'>3 tasks remaining</h2>\n      <ul\n        role='list'\n        className='todo-list stack-large stack-exception'\n        aria-labelledby='list-heading'\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst DATA = [\n  { id: 'todo-0', name: 'Eat', completed: true },\n  { id: 'todo-1', name: 'Sleep', completed: true },\n  { id: 'todo-2', name: 'Repeat', completed: false },\n];\n\nReactDOM.render(<App tasks={DATA} />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}